buildscript {
    ext {
        springBootVersion = '2.0.2.RELEASE'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }
}

plugins {
    id "java"
    id "groovy"
    id "com.palantir.jacoco-coverage" version "0.4.0"
    id "maven-publish"
    id "jacoco"
    id "io.franzbecker.gradle-lombok" version "1.11"
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
//    id 'org.springframework.boot' version '2.0.2.RELEASE'
}

group 'uj.jwzp.w2'
//version '1.0-SNAPSHOT'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            from components.java
        }
    }
}

jar {
    manifest {
        attributes "Main-Class": "uj.jwzp.w2.launcher.Main"
    }
    from {
        configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

jacoco {
    toolVersion = "0.8.0"
    reportsDir = file("$buildDir/customJacocoReportDir")
}

jacocoTestReport {
    reports {
        xml.enabled false
        csv.enabled false
        html.destination file("${buildDir}/jacocoHtml")
    }
}

dependencies {
    // https://mvnrepository.com/artifact/org.hamcrest/hamcrest-core
    testCompile group: 'org.hamcrest', name: 'hamcrest-core', version: '1.3'

    // https://mvnrepository.com/artifact/org.apache.commons/commons-lang3
    compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.7'

    // https://mvnrepository.com/artifact/com.google.code.gson/gson
    compile group: 'com.google.code.gson', name: 'gson', version: '2.8.2'

    // https://mvnrepository.com/artifact/commons-cli/commons-cli
    compile group: 'commons-cli', name: 'commons-cli', version: '1.4'

    // https://mvnrepository.com/artifact/org.javatuples/javatuples
    compile group: 'org.javatuples', name: 'javatuples', version: '1.2'

    compile 'ch.qos.logback:logback-classic:1.2.3'

    compile group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.10.0'
    compile group: 'org.apache.logging.log4j', name: 'log4j-core', version: '2.10.0'

    // https://mvnrepository.com/artifact/net.logstash.logback/logstash-logback-encoder
    compile group: 'net.logstash.logback', name: 'logstash-logback-encoder', version: '4.11'

    compile 'org.springframework:spring-context:5.0.4.RELEASE'

    // https://mvnrepository.com/artifact/xstream/xstream
    compile group: 'xstream', name: 'xstream', version: '1.2.2'

    // https://mvnrepository.com/artifact/com.fasterxml.jackson.dataformat/jackson-dataformat-yaml
    compile group: 'com.fasterxml.jackson.dataformat', name: 'jackson-dataformat-yaml', version: '2.9.4'


    compile('org.springframework.boot:spring-boot-starter-web')
    testCompile('org.springframework.boot:spring-boot-starter-test')
//    compile group: 'org.slf4j', name: 'log4j-over-slf4j', version: '1.7.25'
//    compile group: 'org.apache.logging.log4j', name: 'log4j-to-slf4j', version: '2.10.0'

    testCompile(
            //JUnit
            'junit:junit:4.12',

            //Spock: groovy + framework
            'org.codehaus.groovy:groovy-all:2.4.11',
            'org.spockframework:spock-core:1.1-groovy-2.4',

            //Rich asserting: AssertJ
            'org.assertj:assertj-core:3.9.0',

            //Mocks: Mockito
            'org.mockito:mockito-core:2.8.9',

            //Power mock
            'org.powermock:powermock-api-mockito2:1.7.3',
            'org.powermock:powermock-module-junit4:1.7.3'
    )
}

test {
    ignoreFailures = true
    reports {
        junitXml.enabled = false
        html.enabled = true
    }
}
